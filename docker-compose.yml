version: "3.8"
services:
    mosquitto:
        image: eclipse-mosquitto
        container_name: mosquitto
        restart: always
        networks:
            stack-network:
                ipv4_address: 172.20.0.10
        volumes:
            - ./docker_configuration/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
            - ./volumes/mosquitto:/mosquitto
        expose:
            - 1883
    socketi:
        image: quay.io/soketi/soketi:1.4-16-debian
        container_name: socketi
        restart: always
        expose:
            - 6001
        networks:
            stack-network:
                ipv4_address: 172.20.0.2
        environment:
            - SOKETI_DEFAULT_APP_ID=laravelApp
            - SOKETI_DEFAULT_APP_KEY=
            - SOKETI_DEFAULT_APP_SECRET=
            - SOKETI_DEBUG=1
        labels:
          - "traefik.enable=true"
          - "traefik.docker.network=stack-network"
          - "traefik.tcp.routers.socketi.rule=HostSNI(``)"
          - "traefik.tcp.routers.socketi.service=socketi@docker"
          - "traefik.tcp.services.socketi.loadbalancer.server.port=6001"
          - "traefik.tcp.routers.socketi.entrypoints=socketi"
    redis:
        image: redis
        container_name: redis
        restart: always
        expose:
          - 6379
        volumes:
            - ./volumes/redis:/data
        networks:
            stack-network:
                ipv4_address: 172.20.0.4
    chirpstack:
        image: chirpstack/chirpstack:4
        command: -c /etc/chirpstack
        restart: unless-stopped
        volumes:
            - ./docker_configuration/chirpstack:/etc/chirpstack
            - ./lorawan-devices:/opt/lorawan-devices
        depends_on:
            - postgres
            - mosquitto
            - redis
        networks:
            stack-network:
                ipv4_address: 172.20.0.5
        environment:
            - MQTT_BROKER_HOST=172.20.0.10
            - REDIS_HOST=172.20.0.4
            - POSTGRESQL_HOST=172.20.0.9
        expose:
            - 8081
        labels:
          - "traefik.enable=true"
          - "traefik.docker.network=stack-network"
          - "traefik.http.routers.chirpstack.rule=Host(`chirpstack.co2.co`)"
          - "traefik.http.routers.chirpstack.service=chirpstack@docker"
          - "traefik.http.services.chirpstack.loadbalancer.server.port=8081"
          - "traefik.http.routers.chirpstack.entrypoints=http,https"
    chirpstack-gateway-bridge:
        image: chirpstack/chirpstack-gateway-bridge:4
        restart: unless-stopped
        ports:
            - 1700:1700/udp
        networks:
            stack-network:
                ipv4_address: 172.20.0.6
        volumes:
            - ./docker_configuration/chirpstack-gateway-bridge:/etc/chirpstack-gateway-bridge
        environment:
            - INTEGRATION__MQTT__EVENT_TOPIC_TEMPLATE=eu868/gateway/{{ .GatewayID }}/event/{{ .EventType }}
            - INTEGRATION__MQTT__STATE_TOPIC_TEMPLATE=eu868/gateway/{{ .GatewayID }}/state/{{ .StateType }}
            - INTEGRATION__MQTT__COMMAND_TOPIC_TEMPLATE=eu868/gateway/{{ .GatewayID }}/command/#
            - MQTT_BROKER_HOST=172.20.0.10
        depends_on:
            - mosquitto
    chirpstack-rest-api:
        image: chirpstack/chirpstack-rest-api:4
        restart: unless-stopped
        command: --server chirpstack:8081 --bind 0.0.0.0:8090 --insecure
        expose:
            - 8090
        depends_on:
            - chirpstack
        networks:
            stack-network:
                ipv4_address: 172.20.0.8
        labels:
          - "traefik.enable=true"
          - "traefik.docker.network=stack-network"
          - "traefik.http.routers.chirpstack-rest-api.rule=Host(`chirpstack-api.co2.co`)"
          - "traefik.http.routers.chirpstack-rest-api.service=chirpstack-rest-api@docker"
          - "traefik.http.services.chirpstack-rest-api.loadbalancer.server.port=8090"
          - "traefik.http.routers.chirpstack-rest-api.entrypoints=http,https"
    postgres:
        image: postgres:14-alpine
        restart: unless-stopped
        volumes:
            - ./docker_configuration/postgresql/initdb:/docker-entrypoint-initdb.d
            - ./volumes/postgresql:/var/lib/postgresql/data
        expose:
          - 5432
        environment:
            - POSTGRES_PASSWORD=
            - POSTGRES_USER=
        networks:
            stack-network:
                ipv4_address: 172.20.0.9
    traefik:
        image: traefik:latest
        restart: unless-stopped 
        ports:
          - mode: host
            published: 80
            target: 80
          - mode: host
            published: 443
            target: 443
          - mode: host
            published: 6001
            target: 6001
        volumes: 
          - /var/run/docker.sock:/var/run/docker.sock  
          - ./docker_configuration/traefik:/etc/traefik
        labels:
          - "traefik.enable=true"    
        networks:
          stack-network:
      


networks:
    stack-network:
        external: true
